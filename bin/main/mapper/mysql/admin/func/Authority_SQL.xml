<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Authority"> 
  	
  	<select id="UIA_GetSystemList" resultType="hashmap">
    	<![CDATA[ 
    		SELECT 	* 
    		FROM 	U_USERINFO_AUTHORITY
    		WHERE	UIA_SYSTEM	=	'Y'
    	]]>
	</select>
  	
  	<select id="UIA_GetList3" resultType="hashmap">
    	<![CDATA[ 
    		SELECT 	* 
    		FROM 	U_USERINFO_AUTHORITY
    		WHERE	UIA_SYSTEM	!=	'Y'
    		AND		UIA_DIVISION IN ('G','A')
    		ORDER BY UIA_DEPTH,UIA_ORDER
    	]]>
	</select>
	
	<select id="UIA_GetAllList" resultType="String">
    	<![CDATA[ 
    		SELECT 	UIA_KEYNO 
    		FROM 	U_USERINFO_AUTHORITY
    		WHERE	UIA_DIVISION	IN 	('A','U')
    	]]>
	</select>
	
	<select id="UIA_GetListForDomain" resultType="hashmap" parameterType="String">
    	<![CDATA[ 
    		SELECT 		A.*
    					, SUBSTRING(B.HAM_DEFAULT_URL,length(#{HM_TILES})+1) HAM_DEFAULT_URL
    		FROM 		U_USERINFO_AUTHORITY A
    		LEFT JOIN	S_HOME_AUTHORITY_MANAGER B
    		ON			A.UIA_KEYNO = B.UIA_KEYNO
    		AND			B.HM_KEYNO	=	#{HM_KEYNO}
    		WHERE		A.UIA_DIVISION	IN 	('A','U')
    		AND			A.UIA_NAME != 'ANONYMOUS'
    	]]>
	</select>
	
	
	<insert id="UIA_insertData">
		INSERT INTO U_USERINFO_AUTHORITY
		(
				  UIA_KEYNO
				, UIA_NAME
				, UIA_SYSTEM
				, UIA_MAINKEY
				, UIA_DEPTH
				, UIA_ORDER
				, UIA_DIVISION
				, UIA_HOMEKEY
		)
		VALUES
		(
	   		   	  #{UIA_KEYNO}
				, #{UIA_NAME}
				, #{UIA_SYSTEM}
				, #{UIA_MAINKEY}
				, #{UIA_DEPTH}
				<choose>
					<when test="UIA_ORDER == -1">
				, (SELECT IFNULL(MAX(UIA_ORDER),0) + 1 FROM U_USERINFO_AUTHORITY A WHERE UIA_MAINKEY = #{UIA_MAINKEY})
					</when>
					<otherwise>
				, #{UIA_ORDER}	
					</otherwise>
				</choose>
				, #{UIA_DIVISION}
				, #{UIA_HOMEKEY}
		)
	</insert>
	
	<insert id="UIA_insertAll">
		INSERT INTO U_USERINFO_AUTHORITY
		(
				  UIA_KEYNO
				, UIA_NAME
				, UIA_SYSTEM
				, UIA_MAINKEY
				, UIA_DEPTH
				, UIA_ORDER
				, UIA_DIVISION
		)
		VALUES
		<foreach collection="list" item="item" separator=",">
		(
	   		   	  #{item.UIA_KEYNO}
				, #{item.UIA_NAME}
				, #{item.UIA_SYSTEM}
				, #{item.UIA_MAINKEY}
				, #{item.UIA_DEPTH}
				, #{item.UIA_ORDER}
				, #{item.UIA_DIVISION}
		)
		</foreach>
	
	
	</insert>
	
	
	<select id="UIA_isChange" resultType="int">
		SELECT	COUNT(*)
		FROM	U_USERINFO_AUTHORITY
		WHERE	UIA_KEYNO	=	#{UIA_KEYNO}
		<choose>
			<when test="UIA_MAINKEY == null or UIA_MAINKEY == ''">
		AND		(UIA_MAINKEY	IS	NULL or UIA_MAINKEY = '')	
			</when>
			<otherwise>
		AND		UIA_MAINKEY	=	#{UIA_MAINKEY}
			</otherwise>
		</choose>
		AND		UIA_DEPTH	=	#{UIA_DEPTH}
	</select>
	
  	<select id="UIA_getData" parameterType="String" resultType="hashmap">
  		SELECT	A.*
  				, UIA_NAME NAME
  		FROM	U_USERINFO_AUTHORITY A
  		WHERE	UIA_KEYNO	=	#{UIA_KEYNO}
  	</select>
  	
  
  	
  	<select id="UIA_getDataByUIKEYNO" parameterType="String" resultType="String">
  		SELECT	UIA_KEYNO
  		FROM	U_USERINFO_MEMBER_AUTHORITY 
  		WHERE	UI_KEYNO	=	#{UI_KEYNO}
  	</select>
  	
  	 <!-- 권한 리스트 -->
	<select id="UIA_GetList" resultType="USER">
    	<![CDATA[ 
    		SELECT 	* 
    		FROM 	U_USERINFO_AUTHORITY
    		WHERE	UIA_DIVISION	=	'A'
    	]]>
	</select>
	
	
	
	 <!-- 권한 리스트 (시스템권한 제외)-->
	<select id="UIA_GetList2" resultType="USER">
    	<![CDATA[ 
    		SELECT 	* 
    		FROM 	U_USERINFO_AUTHORITY
    		WHERE	UIA_SYSTEM		!=	'Y'
    		AND		UIA_DIVISION	=	'A'
    	]]>
	</select>
		<select id="UIA_GetList_kakao" resultType="USER">
    	<![CDATA[ 
    		SELECT 	* 
    		FROM 	U_USERINFO_AUTHORITY
    		WHERE	UIA_SYSTEM		!=	'Y'
    	]]>
	</select>
	
	<!-- 권한 리스트 (개발자권한 제외)-->
	<select id="UIA_GetList4" resultType="String">
    	<![CDATA[ 
    		SELECT 	* 
    		FROM 	U_USERINFO_AUTHORITY
    		WHERE	UIA_KEYNO		!= 'UIA_ASDFG'
    	]]>
	</select>
	
	<select id="UIA_GetListwidthUrl" resultType="hashmap" parameterType="String">
	-- LOG OFF
    	<![CDATA[ 
    		SELECT 	U.*,
			(
				SELECT 	GROUP_CONCAT(UIA_NAME) 
			    FROM 	U_USERINFO_AUTHORITY A, U_USERINFO_AUTHORITY_ROLL B
			    WHERE	B.UIA_KEYNO		=	A.UIA_KEYNO	
			    AND		B.MN_KEYNO	=	(SELECT MN_KEYNO FROM S_MENU_MANAGER WHERE MN_URL = #{MN_URL})
			    AND		B.UIR_KEYNO	=	U.UIR_KEYNO
			) AUTHORITY_LIST
			FROM	U_USERINFO_ROLL U
			WHERE	U.UIR_TYPE	=	'SC_MYKFE'
    	]]>
	</select>
	
	<!-- 서브 권한 리스트 -->
	<select id="UIR_GetList" resultType="USER">
    	<![CDATA[ 
    		SELECT 		R.*,S.SC_CODENM UIR_TYPE_NAME
    		FROM 		U_USERINFO_ROLL R
    		LEFT JOIN	S_COMMON_CODE_SUB S
    		ON			R.UIR_TYPE	=	S.SC_KEYNO
    	]]>
    	<if test='UIR_TYPE != null and UIR_TYPE != ""'>
    		WHERE		UIR_TYPE	=	#{UIR_TYPE}
    	</if>
	</select> 
	
    <!-- 권한에  리소스 매핑 -->
	<insert id="URA_insert" parameterType="Resource">
	
		INSERT INTO U_USERINFO_RESOURCE_AUTHORITY
		(			
				  UIA_KEYNO
				, USR_KEYNO
		)
        VALUES
        <foreach collection="urlResources" item="item" separator=" , ">
            (#{item}, #{USR_KEYNO})
        </foreach>
    </insert>
    
    
    <delete id="URA_delete" parameterType="Resource">
    	DELETE FROM U_USERINFO_RESOURCE_AUTHORITY
    	WHERE	UIA_KEYNO	=	#{UIA_KEYNO}
    </delete>
    
    <delete id="URA_deleteWidthUSR" parameterType="String">
    	DELETE FROM U_USERINFO_RESOURCE_AUTHORITY
    	WHERE	USR_KEYNO	=	#{USR_KEYNO}
    </delete>
    
    <!-- 리소스 등록 -->
	<insert id="USR_insert" parameterType="Resource">
	
		INSERT INTO U_USERINFO_SECURED_RESOURCE
		(			
				  	USR_KEYNO
				  ,	USR_NAME
				  ,	USR_PATTERN
				  ,	USR_TYPE
				  ,	USR_UIR_KEYNO
				  ,	USR_ORDER
				  ,	USR_ORDER_CLASS
		)
        VALUES 
        (
        		  	#{USR_KEYNO}
				  ,	#{USR_NAME}
				  ,	#{USR_PATTERN}
				  ,	#{USR_TYPE}
				  ,	#{USR_UIR_KEYNO}
				  ,	#{USR_ORDER}
				  ,	#{USR_ORDER_CLASS}
        )
    </insert>
    
	<!-- 관리자 여부 -->
	<select id="UIA_isAdmin" parameterType="hashmap" resultType="String">
		SELECT		CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END  
		FROM 		U_USERINFO_SECURED_RESOURCE A
		LEFT JOIN 	U_USERINFO_RESOURCE_AUTHORITY B
		ON 			A.USR_KEYNO = B.USR_KEYNO
		LEFT JOIN 	U_USERINFO_AUTHORITY C 
		ON 			B.UIA_KEYNO = C.UIA_KEYNO
		WHERE 		USR_MN_KEYNO = 'MN_0000000999'
		AND	 		UIA_NAME IN 
	  	<foreach collection="authList" item="auth" open="(" close=")" separator=",">
					#{auth}		  
	  	</foreach>
	</select>
	
	<delete id="MN_deleteData">
		DELETE FROM	U_USERINFO_AUTHORITY_ROLL
		WHERE	MN_KEYNO	=	#{MN_KEYNO}
	</delete>
	
	<delete id="UAR_deleteData">
		DELETE FROM	U_USERINFO_AUTHORITY_ROLL
		WHERE	UIA_KEYNO	=	#{UIA_KEYNO}
	</delete>
	
	<delete id="UAR_deleteData2">
		DELETE FROM	U_USERINFO_AUTHORITY_ROLL
		WHERE UIA_KEYNO IN (
			SELECT D.*
			FROM (
				SELECT A.UIA_KEYNO 
				FROM U_USERINFO_AUTHORITY_ROLL A 
				LEFT JOIN  U_USERINFO_AUTHORITY B 
				ON A.UIA_KEYNO = B.UIA_KEYNO
				WHERE B.UIA_DIVISION != 'U'
				<if test="notDeleteKeyList != null">
				AND	A.UIA_KEYNO NOT IN
				<foreach collection="notDeleteKeyList" item="item" open="(" close=")" separator="," >
					#{item}
				</foreach>
				</if>
			) D
		)
	</delete>
	
	<insert id="UAR_insertAll">
		INSERT INTO U_USERINFO_AUTHORITY_ROLL
		(
				  UIA_KEYNO
				, MN_KEYNO
				, UIR_KEYNO
		)
		VALUES
		<foreach collection="roleList" item="item" separator=",">
		(
	   		   	  #{UIA_KEYNO}
				, #{item.MN_KEYNO}
				, #{item.UIR_KEYNO}
		)
		</foreach>
	
	</insert>
	
	<insert id="UAR_insertAll2">
		INSERT INTO U_USERINFO_AUTHORITY_ROLL
		(
				  UIA_KEYNO
				, MN_KEYNO
				, UIR_KEYNO
		)
		VALUES
		<foreach collection="roleList" item="item" separator=",">
		(
	   		   	  #{item.UIA_KEYNO}
				, #{item.MN_KEYNO}
				, #{item.UIR_KEYNO}
		)
		</foreach>
	
	</insert>
	
	<insert id="UAA_insertAll2">
		INSERT INTO U_USERINFO_AUTHORITY_ADMIN
		(
			  MN_KEYNO
			, HM_KEYNO
			, UIA_KEYNO
		)
		VALUES
        <foreach collection="adminAuthList" item="adminAuth" separator=",">
			<foreach collection="menuList" item="menu" separator=",">
        (
   		   	  #{menu.MN_KEYNO}
			, #{HM_KEYNO}
			, #{adminAuth}
		)
			</foreach>
        </foreach>
	
	</insert>
	
	<insert id="UAR_insertByMainKey">
		INSERT INTO U_USERINFO_AUTHORITY_ROLL 
	    SELECT 	#{UIA_KEYNO},MN_KEYNO,UIR_KEYNO 
	    FROM 	U_USERINFO_AUTHORITY_ROLL  
	    WHERE 	UIA_KEYNO 	= 	#{UIA_MAINKEY}
	</insert>
	
	
	<select id="UIA_selectChildAuthorityMappingKeyno" resultType="HashMap">
		SELECT UIA_KEYNO
		FROM U_USERINFO_AUTHORITY
		WHERE UIA_MAINKEY = #{UIA_KEYNO}
	</select>
	
	<delete id="UIA_deleteSubChildAuthorityMappingBoard">
		DELETE 	FROM	U_USERINFO_AUTHORITY_ROLL
		WHERE 	UIA_KEYNO 	= #{UIA_KEYNO}
		AND  	MN_KEYNO 	= #{MN_KEYNO}
	</delete>
	
	
	<select id="UIA_selectChildAuthorityMappingMenu" resultType="HashMap">
		SELECT A.UIA_KEYNO,A.MN_KEYNO
		FROM (
			SELECT * 
			FROM 	U_USERINFO_AUTHORITY_ROLL
			WHERE	UIR_KEYNO	=	#{UIR_KEYNO}
			AND		UIA_KEYNO IN 
			<foreach collection="childAuthoirtyList" item="item" open="(" close=")" separator=",">
					#{item.UIA_KEYNO}
			</foreach>
		) A
		LEFT JOIN (
			SELECT * 
			FROM 	U_USERINFO_AUTHORITY_ROLL
			WHERE	UIR_KEYNO	=	#{UIR_KEYNO}
			AND		UIA_KEYNO	=	#{UIA_KEYNO}
		) B
		ON 		A.MN_KEYNO = B.MN_KEYNO
		WHERE	B.UIA_KEYNO IS NULL
	</select>
	
	<delete id="UIA_deleteSubChildAuthorityMappingMenu">
		DELETE FROM U_USERINFO_AUTHORITY_ROLL
		WHERE 		UIA_KEYNO IN ( 	SELECT UIA_KEYNO
									FROM U_USERINFO_AUTHORITY
									WHERE UIA_MAINKEY = #{UIA_MAINKEY}
								  )
		AND   		MN_KEYNO = #{MN_KEYNO}
	</delete>
	
	<delete id="UIA_deleteChildAuthorityMappingMenu">
		DELETE FROM U_USERINFO_AUTHORITY_ROLL
		WHERE	(UIA_KEYNO,MN_KEYNO) IN (
					SELECT A.UIA_KEYNO,A.MN_KEYNO
					FROM (
						SELECT * 
						FROM 	U_USERINFO_AUTHORITY_ROLL
						WHERE	UIR_KEYNO	=	#{UIR_KEYNO}
						AND		UIA_KEYNO IN 
						<foreach collection="childAuthoirtyList" item="item" open="(" close=")" separator=",">
								#{item.UIA_KEYNO}
						</foreach>
					) A
					LEFT JOIN (
						SELECT * 
						FROM 	U_USERINFO_AUTHORITY_ROLL
						WHERE	UIR_KEYNO	=	#{UIR_KEYNO}
						AND		UIA_KEYNO	=	#{UIA_KEYNO}
					) B
					ON 		A.MN_KEYNO = B.MN_KEYNO
					WHERE	B.UIA_KEYNO IS NULL
				)
	</delete>
	
	<select id="USR_getMenuListWidthAuthority" resultType="hashmap">
		SELECT 		A.MN_KEYNO
					, GROUP_CONCAT(A.UIA_KEYNO) UIA_KEYNO
					, CASE C.MN_PAGEDIV_C
						WHEN 'SC_QXCFB' THEN (90 - MN_LEV*10 - 1) 
						ELSE (90 - MN_LEV*10) 
					END USR_ORDER
		FROM		U_USERINFO_AUTHORITY_ROLL A
		LEFT JOIN	U_USERINFO_AUTHORITY B
		ON			A.UIA_KEYNO 	= 	B.UIA_KEYNO
		LEFT JOIN	S_MENU_MANAGER C 
		ON			A.MN_KEYNO 		= 	C.MN_KEYNO
		AND			C.MN_DEL_YN		=	'N'
		WHERE		A.UIR_KEYNO 	=	#{UIR_KEYNO}
		AND			B.UIA_DIVISION 	IN 	('A','U')
		AND			C.MN_KEYNO		IS NOT NULL
		GROUP BY 	A.MN_KEYNO
		ORDER BY 	USR_ORDER
	
	</select>
	
	<insert id="securedResourceInsertAllData">
		INSERT INTO U_USERINFO_SECURED_RESOURCE
		(
				  USR_KEYNO
				, USR_PATTERN
				, USR_ORDER
				, USR_UIR_KEYNO
				, USR_MN_KEYNO
		)
		VALUES
		<foreach collection="securedResourceList" item="item" separator=",">
		(
				  #{item.USR_KEYNO}
				, #{item.USR_PATTERN}
				, #{item.USR_ORDER}
				, #{item.USR_UIR_KEYNO}
				, #{item.USR_MN_KEYNO}
		)
		</foreach>
	
	</insert>
	
	<insert id="resourceAuthorityInsertAllData">
		INSERT INTO U_USERINFO_RESOURCE_AUTHORITY
		(
				  USR_KEYNO
				, UIA_KEYNO
		)
		VALUES
		<foreach collection="resourceAuthorityList" item="item" separator=",">
		(
				  #{item.USR_KEYNO}
				, #{item.UIA_KEYNO}
		)
		</foreach>
	
	</insert>
	
	<select id="UIA_boardList" resultType="hashmap" parameterType="String">
		SELECT 	A.MN_KEYNO, A.MN_NAME, B.MN_NAME MN_HOMEDIV_NAME 
				, GROUP_CONCAT(UIR_KEYNO) UIR_KEYNO
		FROM 		S_MENU_MANAGER A
		LEFT JOIN 	S_MENU_MANAGER B
		ON 			A.MN_HOMEDIV_C = B.MN_KEYNO
		LEFT JOIN	U_USERINFO_AUTHORITY_ROLL C
		ON			A.MN_KEYNO = C.MN_KEYNO
		AND			C.UIA_KEYNO	=	#{UIA_KEYNO}
		WHERE		A.MN_PAGEDIV_C = 'SC_TFOVO'
		AND 		A.MN_DEL_YN	=	'N'
		GROUP BY 	A.MN_KEYNO
		ORDER BY 	A.MN_HOMEDIV_C, A.MN_REGDT DESC
	</select>
	
	<delete id="UIA_deleteCustomAuthorityData">
		DELETE 
		FROM 	U_USERINFO_AUTHORITY
		WHERE 	UIA_KEYNO IN (
			SELECT D.*
			FROM (
				SELECT 		A.UIA_KEYNO 
				FROM 		U_USERINFO_AUTHORITY A 
				LEFT JOIN 	U_USERINFO_AUTHORITY B 
				ON 			A.UIA_MAINKEY 	= 	B.UIA_KEYNO
	   			WHERE 		A.UIA_DIVISION 	= 	'U' 
	   			AND			A.UIA_SYSTEM	=	'N' 
	   			AND 		B.UIA_KEYNO IS NULL
   			) D	
		)
	</delete>
	
	<delete id="UIA_deleteCustomAuthorityData2">
		DELETE 
		FROM 	${tableName}
		WHERE 	UIA_KEYNO IN (
			SELECT D.*
			FROM (
				SELECT 		A.UIA_KEYNO
	  			FROM 		${tableName} A 
	  			LEFT JOIN 	U_USERINFO_AUTHORITY B 
	  			ON 			A.UIA_KEYNO = B.UIA_KEYNO 
	  			WHERE 		B.UIA_NAME IS NULL
  			) D	
		)
	</delete>
	
	<!-- 20190618 -->
	<select id="UIA_GetUserList" resultType="hashmap">
  		SELECT 	 CASE (UA.UIA_MAINKEY)
		          	WHEN null THEN 'UIA_00000'
		          	WHEN '' THEN 'UIA_00000'
		        	ELSE UA.UIA_MAINKEY
	        	 END UIA_MAINKEY
  				,  UA.*
				, UAR.MN_KEYNO
				, GROUP_CONCAT(DISTINCT UIR_KEYNO ORDER BY UIR_KEYNO) UIR_KEYNO  
				, (SELECT COUNT(*) FROM U_USERINFO_AUTHORITY WHERE UA.UIA_KEYNO = UIA_MAINKEY) CHILD_CNT	
				, (SELECT COUNT(*) FROM U_USERINFO_AUTHORITY WHERE UA.UIA_MAINKEY = UIA_MAINKEY) SIBLING_CNT 
				, MN.MN_URL, MN.MN_PAGEDIV_C, MN.MN_FORWARD_URL 
				, (	SELECT COUNT(*)
			    	FROM U_USERINFO_AUTHORITY_ROLL
			    	WHERE UIA_KEYNO = (SELECT UIA_MAINKEY FROM U_USERINFO_AUTHORITY WHERE UIA_KEYNO = UA.UIA_KEYNO)
			    	AND   MN_KEYNO = #{MN_KEYNO}
			      ) ROLES_MAIN_CNT
   		FROM 	U_USERINFO_AUTHORITY UA
   		LEFT JOIN ( SELECT *
   					FROM U_USERINFO_AUTHORITY_ROLL
   					WHERE MN_KEYNO = #{MN_KEYNO}
   			      ) UAR
   		ON 		UA.UIA_KEYNO = UAR.UIA_KEYNO
   		LEFT JOIN S_MENU_MANAGER MN
   		ON      UAR.MN_KEYNO = MN.MN_KEYNO
   		WHERE	UA.UIA_SYSTEM	!=	'Y'
   		GROUP BY UIA_KEYNO
   		ORDER BY UA.UIA_DEPTH,UA.UIA_ORDER
	</select>
	
 	<select id="UIA_GetAnonymous" resultType="hashmap">
  		SELECT 	  UA.*
				, UAR.MN_KEYNO
				, GROUP_CONCAT(DISTINCT UIR_KEYNO ORDER BY UIR_KEYNO) UIR_KEYNO  
				, (SELECT COUNT(*) FROM U_USERINFO_AUTHORITY WHERE UA.UIA_KEYNO = UIA_MAINKEY) CHILD_CNT	
				, (SELECT COUNT(*) FROM U_USERINFO_AUTHORITY WHERE UA.UIA_MAINKEY = UIA_MAINKEY) SIBLING_CNT 
				, MN.MN_URL, MN.MN_PAGEDIV_C
				, (	SELECT COUNT(*)
			    	FROM U_USERINFO_AUTHORITY_ROLL
			    	WHERE UIA_KEYNO = (SELECT UIA_MAINKEY FROM U_USERINFO_AUTHORITY WHERE UIA_KEYNO = UA.UIA_KEYNO)
			    	AND   MN_KEYNO = #{MN_KEYNO}
			      ) ROLES_MAIN_CNT
   		FROM 	U_USERINFO_AUTHORITY UA
   		LEFT JOIN ( SELECT *
   					FROM U_USERINFO_AUTHORITY_ROLL
   					WHERE MN_KEYNO = #{MN_KEYNO}
   			      ) UAR
   		ON 		UA.UIA_KEYNO = UAR.UIA_KEYNO
   		LEFT JOIN S_MENU_MANAGER MN
   		ON      UAR.MN_KEYNO = MN.MN_KEYNO
   		WHERE	UA.UIA_KEYNO = 'UIA_EAFDS'
   		GROUP BY UIA_KEYNO
   		ORDER BY UA.UIA_DEPTH,UA.UIA_ORDER
	</select>
	
	<insert id="UAR_Menu_insertAll">
		INSERT INTO U_USERINFO_AUTHORITY_ROLL
		(
				  UIA_KEYNO
				, MN_KEYNO
				, UIR_KEYNO
		)
		VALUES
		<foreach collection="roleList" item="item" separator=",">
		(
	   		   	  #{item.UIA_KEYNO}
				, #{MN_KEYNO}
				, #{item.UIR_KEYNO}
		)
		</foreach>
	</insert>
	
	<select id="get_MainMenuAuth" resultType="HashMap">
		SELECT IFNULL(GROUP_CONCAT(UAR.UIA_KEYNO), '') MAIN_AUTH_KEY
		FROM U_USERINFO_AUTHORITY_ROLL UAR
		LEFT JOIN U_USERINFO_AUTHORITY UA
		ON UAR.UIA_KEYNO = UA.UIA_KEYNO
		WHERE MN_KEYNO = (  SELECT MN_KEYNO
							FROM  S_MENU_MANAGER
							WHERE MN_KEYNO = 
							<if test="MenuLev == 0">
							#{AUTH_KEY}
							</if>
							<if test="MenuLev != 0">
							(SELECT MN_MAINKEY
							FROM  S_MENU_MANAGER
							WHERE MN_KEYNO = #{AUTH_KEY}) 
							</if>
						)	
	</select>
	
	<delete id="clean_authority_roll">
		DELETE FROM U_USERINFO_AUTHORITY_ROLL
		WHERE	(UIA_KEYNO,MN_KEYNO) IN (
			SELECT D.UIA_KEYNO,D.MN_KEYNO
			FROM(
				SELECT A.UIA_KEYNO,A.MN_KEYNO
				FROM	U_USERINFO_AUTHORITY_ROLL A 
				LEFT JOIN S_MENU_MANAGER B 
				ON 		A.MN_KEYNO = B.MN_KEYNO
				LEFT JOIN U_USERINFO_AUTHORITY C 
				ON 		A.UIA_KEYNO = C.UIA_KEYNO
				WHERE (B.MN_KEYNO IS NULL OR C.UIA_KEYNO IS NULL)
				GROUP BY A.UIA_KEYNO,A.MN_KEYNO
			) AS D
		)
	</delete>
	
	<delete id="delete_auth_roll">
		DELETE FROM U_USERINFO_AUTHORITY_ROLL
		WHERE  UIA_KEYNO = (SELECT UIA_KEYNO
							FROM U_USERINFO_AUTHORITY
							WHERE UIA_NAME LIKE CONCAT('%(',#{UI_ID},')%'))
	</delete>
	<delete id="delete_auth_resource">
		DELETE FROM U_USERINFO_RESOURCE_AUTHORITY
		WHERE  UIA_KEYNO = ( SELECT UIA_KEYNO
							FROM U_USERINFO_AUTHORITY
							WHERE UIA_NAME LIKE CONCAT('%(',#{UI_ID},')%'))
	</delete>
	<delete id="delete_auth_member">
		DELETE FROM U_USERINFO_MEMBER_AUTHORITY
		WHERE  UI_KEYNO = (  SELECT UI_KEYNO
							FROM U_USERINFO
							WHERE UI_ID = #{UI_ID})
	</delete>
	<delete id="delete_auth">
		DELETE FROM U_USERINFO_AUTHORITY
		WHERE  UIA_NAME LIKE CONCAT('%(',#{UI_ID},')%')
	</delete>
	
	<select id="UAR_getMainKeysBoardAuthList" resultType="hashmap">
		SELECT 		MN_KEYNO
					, A.UIR_KEYNO 
		FROM 		U_USERINFO_AUTHORITY_ROLL A 
		LEFT JOIN 	U_USERINFO_ROLL B 
		ON 			A.UIR_KEYNO = 	B.UIR_KEYNO 
		WHERE 		B.UIR_TYPE 	= 	#{UIR_TYPE} 
		AND 		A.UIA_KEYNO = 	#{UIA_KEYNO}
	
	</select>
	
	
	<select id="UIA_getGroupAuthCnt" parameterType="String" resultType="USER">
		SELECT	*
		FROM	U_USERINFO_AUTHORITY
		WHERE	UIA_SYSTEM	=	'P'
		AND		UIA_HOMEKEY	=	#{UIA_HOMEKEY}
	</select>
	
	<select id="UIA_checkDuplName" parameterType="String" resultType="int">
		SELECT 	COUNT(*)
		FROM	U_USERINFO_AUTHORITY
		WHERE	UIA_NAME IN (#{UIA_NAME}, CONCAT(#{UIA_NAME} , ' 관리자'))	
	</select>
	
	<delete id="UAR_deleteByHomeManager" parameterType="String">
		DELETE 
		FROM 	U_USERINFO_AUTHORITY_ROLL 
		WHERE 	UIA_KEYNO IN (
			SELECT UIA_KEYNO 
			FROM U_USERINFO_AUTHORITY 
			WHERE UIA_HOMEKEY = #{HM_KEYNO}
			)
	</delete>
	
	<delete id="UMA_deleteByHomeManager" parameterType="String">
		DELETE 
		FROM 	U_USERINFO_MEMBER_AUTHORITY 
		WHERE 	UIA_KEYNO IN (
			SELECT UIA_KEYNO 
			FROM U_USERINFO_AUTHORITY 
			WHERE UIA_HOMEKEY = #{HM_KEYNO}
			)
	</delete>
	
	<delete id="UIA_deleteByHomeManager" parameterType="String">
		DELETE 
		FROM 	U_USERINFO_AUTHORITY 
		WHERE 	UIA_HOMEKEY  = #{HM_KEYNO}
	</delete>
	
	<delete id="UAA_deleteData">
		DELETE FROM	U_USERINFO_AUTHORITY_ADMIN
		WHERE	UIA_KEYNO	=	#{UIA_KEYNO}
	</delete>
	
	<insert id="UAA_insertAll">
		INSERT INTO U_USERINFO_AUTHORITY_ADMIN
		(
				  MN_KEYNO
				, HM_KEYNO
				, UIA_KEYNO
		)
		VALUES
		<foreach collection="adminPageRoleList" item="item" separator=",">
		(
	   		   	  #{item.MN_KEYNO}
				, #{item.HM_KEYNO}
				, #{UIA_KEYNO}
		)
		</foreach>
	
	</insert>
	
	<select id="UAA_getList" resultType="hashmap" parameterType="String">
		SELECT 		*
		FROM		U_USERINFO_AUTHORITY_ADMIN
		WHERE		UIA_KEYNO	=	#{UIA_KEYNO}
		ORDER BY 	MN_KEYNO
	</select>
	
	<delete id="UAA_deleteByHomeManager" parameterType="String">
		DELETE 
		FROM 	U_USERINFO_AUTHORITY_ADMIN 
		WHERE 	UIA_KEYNO IN (
			SELECT UIA_KEYNO 
			FROM U_USERINFO_AUTHORITY 
			WHERE UIA_HOMEKEY = #{HM_KEYNO}
			)
	</delete>
	
	<select id="getManageableDomain" resultType="hashmap">
		SELECT 		*
		FROM 		S_HOME_MANAGER A 
		LEFT JOIN 	S_MENU_MANAGER B 
		ON 			A.HM_MN_HOMEDIV_C = B.MN_KEYNO
		WHERE 		HM_USE_YN = 'Y'
		AND 		HM_MN_HOMEDIV_C  IN (
						SELECT	HM_KEYNO
						FROM	U_USERINFO_AUTHORITY_ADMIN  
						WHERE 	UIA_KEYNO = #{UIA_KEYNO}
						AND 	MN_KEYNO  = (SELECT MN_KEYNO FROM S_MENU_MANAGER WHERE MN_URL = #{MN_URL})
					)
	
	</select>
	
	<select id="UAA_getAdminAuthMenuList" resultType="hashmap">
    	SELECT		A.MN_KEYNO
    				, CASE WHEN B.MN_KEYNO IS NULL THEN 'N' ELSE 'Y' END adminAuth 
    	FROM		(
    		SELECT	*
    		FROM	S_MENU_MANAGER
    		WHERE 	MN_DEL_YN	=	'N'
    		AND		MN_URL LIKE '/dyAdmin/homepage%'
    	) A
    	LEFT JOIN  	U_USERINFO_AUTHORITY_ADMIN B
    	ON			A.MN_KEYNO 	= 	B.MN_KEYNO 
    	AND			B.HM_KEYNO	=	#{HM_KEYNO}
    	AND 		B.UIA_KEYNO	=	#{UIA_KEYNO}
    	
    </select>
	
</mapper>
 